name: Build, Push, and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build
    runs-on: dind-arc-runners-set
    # runs-on: arc-runners-set
    # runs-on: kube-arc-runners-set
    steps:
      - uses: docker/login-action@v1
        with:
          registry: harbor.korporate.org
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          with:

      - uses: sonarsource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Installe docker compose
        run: |
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -sL https://github.com/docker/compose/releases/download/v2.33.1/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose

      - uses: actions/checkout@v2
      - name: Set env
        run: echo "GITHUB_BRANCH=$(echo $GITHUB_REF_NAME-$GITHUB_SHA)" >> $GITHUB_ENV

      - name: Build with compose
        run: docker compose build
      # - name: Build Docker image
      #   run: |
      #     docker buildx create --use
      #     docker buildx inspect default --bootstrap
      #     docker buildx build --file Dockerfile -t harbor.korporate.org/myapp/my-app-image:$GITHUB_REF_NAME-$GITHUB_SHA --load .

      - name: Tag images
        run: |
          docker tag harbor.korporate.org/mywp/mariadb:1 harbor.korporate.org/mywp/mariadb:$GITHUB_REF_NAME-$GITHUB_SHA
          docker tag harbor.korporate.org/mywp/wordpress:1 harbor.korporate.org/mywp/wordpress:$GITHUB_REF_NAME-$GITHUB_SHA

      # - name: Sleep
      #   run: sleep 36000

      - name: Push Docker image to Harbor
        run: |
          docker push harbor.korporate.org/mywp/mariadb:$GITHUB_REF_NAME-$GITHUB_SHA
          docker push harbor.korporate.org/mywp/wordpress:$GITHUB_REF_NAME-$GITHUB_SHA

      - name: Install yq
        run: |
          sudo curl -sL -o /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/local/bin/yq
      #    sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64

      - name: Clone Repository
        run: |
          git config --global user.name "${{secrets.USERNAME_GITHUB}}"
          git config --global user.email "${{secrets.EMAIL_GITHUB}}"
          cd /tmp
          git clone https://github.com/0769233558/myapp.git
          cd myapp
      - name: Update manifest file
        run: |
          yq eval '.spec.template.spec.containers[0].image = "harbor.korporate.org/mywp/mariadb:${{ env.GITHUB_BRANCH }}"' -i deployments/db-deployment.yml
          yq eval '.spec.template.spec.containers[0].image = "harbor.korporate.org/mywp/wordpress:${{ env.GITHUB_BRANCH }}"' -i deployments/wordpress-deployment.yml

      - name: Push to Repo
        run: |
          git add .
          git commit -m "Updated by GitHub Actions"
          git push https://github.com/0769233558/myapp.git --all
